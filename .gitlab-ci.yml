image: docker:latest

services:
  - docker:dind

workflow:
  rules:
    # Only execute when a valid version tag like v1.0, 2.3 or similar is given
    # Required is always one point like 1.0
    - if: $CI_COMMIT_TAG =~ /^v?[0-9]+[.][0-9]+([.][0-9]+)?$/
    - if: $CI_COMMIT_BRANCH

variables:
  DOCKER_LOGIN_USER: ""
  DOCKER_LOGIN_PASSWORD: ""

stages:
  - build
  - publish

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  except:
    - master
  script:
    - echo "Building image"
    - docker build --tag personal-website:$CI_COMMIT_REF_SLUG .
    - docker save -o personal-website.tar personal-website:$CI_COMMIT_REF_SLUG
  artifacts:
    paths:
      - personal-website.tar

publish:
  stage: publish
  except:
    - master
  dependencies:
    - build
  script:
    - echo "Publishing built image"
    - docker load -i personal-website.tar
    - docker tag personal-website:$CI_COMMIT_REF_SLUG registry.gitlab.com/msjp/personal-website:$CI_COMMIT_REF_SLUG
    - docker push registry.gitlab.com/msjp/personal-website:$CI_COMMIT_REF_SLUG
    - docker rmi personal-website:$CI_COMMIT_REF_SLUG

build-master:
  stage: build
  only:
    - master
  script:
    - echo "Building (master) image"
    - docker build --tag personal-website:$CI_COMMIT_TAG .
    - docker save -o personal-website.tar personal-website:master.$CI_PIPELINE_ID
  artifacts:
    paths:
      - personal-website.tar

publish-master:
  stage: publish
  only:
    - master
  dependencies:
    - build-master
  script:
    - echo "Publishing built (master) image"
    - docker load -i personal-website.tar
    - docker tag personal-website:$CI_COMMIT_REF_NAME registry.gitlab.com/msjp/personal-website:master.$CI_PIPELINE_ID
    - docker push registry.gitlab.com/msjp/personal-website:master.$CI_PIPELINE_ID
    - docker rmi personal-website:master.$CI_PIPELINE_ID